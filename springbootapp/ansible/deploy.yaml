- name: Deploy docker image to webserver
  hosts: server
  vars:
    ansible_python_interpreter: /usr/bin/python3.8
    image_name: "{{ IMAGE_NAME }}"
    # container_name: simple-webapp
    stack_path: /home/ubuntu/docker/demo

  tasks:

  - name: Stack Deploy | Upload docker-compose.yaml file
    ansible.builtin.copy:
      src: docker-compose.yaml
      dest: "{{ stack_path }}/docker-compose.yaml"

  # - name: Stop previous Docker container
  #   community.docker.docker_container:
  #     name: "{{ container_name }}"
  #     state: stopped
  
  # - name: Remove previous Docker container
  #   community.docker.docker_container:
  #     name: "{{ container_name }}"
  #     state: absent

  # - name: Remove previous image
  #   community.docker.docker_image:
  #     name: "{{ image_name }}"
  #     state: absent
  #     force_absent: true
  

  - name: Stack Deploy | Log into DockerHub
    community.docker.docker_login:
      username: "{{ DOCKER_USERNAME }}"
      password: "{{ DOCKER_PASSWORD }}"

  # - name: Pull latest image from DockerHub
  #   community.docker.docker_image:
  #     name: "{{ image_name }}"
  #     source: pull
  #     state: present

  # - name: Start the Docker container
  #   community.docker.docker_container:
  #     name: "{{ container_name }}"
  #     image: "{{ image_name }}"
  #     state: started
  #     ports:
  #       - "80:8080"
  #     restart_policy: always

  - name: Stack Deploy | Deploy Docker Stack
    community.docker.docker_stack:
      state: present
      name: demo
      with_registry_auth: true
      compose:
        - "{{ stack_path }}/docker-compose.yaml"
    environment:
      IMAGE: "{{ image_name }}"

  - name: Stack Deploy | Log out of DockerHub
    community.docker.docker_login:
      state: absent