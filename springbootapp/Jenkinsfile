pipeline {
    agent { label 'worker' }

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')
        WEBSERVER_HOSTNAME = "webserver.server.cx.ua"
        CONTAINER_NAME = "simple-webapp"
        DOCKER_IMAGE = "13rom/simple-webapp"
        IMAGE_TAG = "0.1.${BUILD_NUMBER}"
    }

    stages {
        stage('Git Checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'github', url: 'git@github.com:13rom/sample-webapp.git']])
            }
        }

        stage('Build Image') {
            steps {
                dir('springbootapp'){
                    script {
                        dockerImage = docker.build DOCKER_IMAGE + "$IMAGE_TAG"
                    }
                }
            }
        }

        stage('Push Image') {
            steps {
                script {
                    docker.withDockerRegistry('', 'dockerhub') {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                    sshagent(credentials: ['webserver']) {
                        sh '''
                            [ -d ~/.ssh ] || mkdir ~/.ssh && chmod 0700 ~/.ssh
                            ssh-keyscan -t rsa,dsa webserver.server.cx.ua >> ~/.ssh/known_hosts
                            ssh ubuntu@webserver.server.cx.ua 'whoami && pwd'
                        '''
                        // TODO: change this to deploy.sh
                        sh "ssh ubuntu@${WEBSERVER_HOSTNAME} docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
                        sh "ssh ubuntu@${WEBSERVER_HOSTNAME} docker pull ${DOCKER_IMAGE}:${IMAGE_TAG}"

                        sh "ssh ubuntu@${WEBSERVER_HOSTNAME} \"docker container stop ${CONTAINER_NAME} || true\""
                        sh "ssh ubuntu@${WEBSERVER_HOSTNAME} \"docker rm -f ${CONTAINER_NAME} || true\""
                        sh "ssh ubuntu@${WEBSERVER_HOSTNAME} docker run -d --name ${CONTAINER_NAME} -p 80:8080 ${DOCKER_IMAGE}:${IMAGE_TAG}"
                        sh "ssh ubuntu@${WEBSERVER_HOSTNAME} docker logout"
                    }
                }
            }
        }
    }


    post {
        always {
            echo "Cleaning up slave docker..."
            sh 'docker logout'
            sh "docker rmi ${DOCKER_IMAGE}:${IMAGE_TAG}"
        }
    }
}
